/* tslint:disable */
/* eslint-disable */
/**
 * MobyLab Web App
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CourseInstance } from './CourseInstance';
import {
    CourseInstanceFromJSON,
    CourseInstanceFromJSONTyped,
    CourseInstanceToJSON,
} from './CourseInstance';
import type { Subject } from './Subject';
import {
    SubjectFromJSON,
    SubjectFromJSONTyped,
    SubjectToJSON,
} from './Subject';
import type { User } from './User';
import {
    UserFromJSON,
    UserFromJSONTyped,
    UserToJSON,
} from './User';

/**
 * 
 * @export
 * @interface Course
 */
export interface Course {
    /**
     * 
     * @type {string}
     * @memberof Course
     */
    id?: string;
    /**
     * 
     * @type {Date}
     * @memberof Course
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof Course
     */
    updatedAt?: Date;
    /**
     * 
     * @type {number}
     * @memberof Course
     */
    startTime?: number;
    /**
     * 
     * @type {number}
     * @memberof Course
     */
    duration?: number;
    /**
     * 
     * @type {string}
     * @memberof Course
     */
    location?: string | null;
    /**
     * 
     * @type {Subject}
     * @memberof Course
     */
    subject?: Subject;
    /**
     * 
     * @type {string}
     * @memberof Course
     */
    subjectId?: string;
    /**
     * 
     * @type {Array<CourseInstance>}
     * @memberof Course
     */
    courseInstances?: Array<CourseInstance> | null;
    /**
     * 
     * @type {Array<User>}
     * @memberof Course
     */
    students?: Array<User> | null;
}

/**
 * Check if a given object implements the Course interface.
 */
export function instanceOfCourse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CourseFromJSON(json: any): Course {
    return CourseFromJSONTyped(json, false);
}

export function CourseFromJSONTyped(json: any, ignoreDiscriminator: boolean): Course {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'createdAt': !exists(json, 'createdAt') ? undefined : (new Date(json['createdAt'])),
        'updatedAt': !exists(json, 'updatedAt') ? undefined : (new Date(json['updatedAt'])),
        'startTime': !exists(json, 'startTime') ? undefined : json['startTime'],
        'duration': !exists(json, 'duration') ? undefined : json['duration'],
        'location': !exists(json, 'location') ? undefined : json['location'],
        'subject': !exists(json, 'subject') ? undefined : SubjectFromJSON(json['subject']),
        'subjectId': !exists(json, 'subjectId') ? undefined : json['subjectId'],
        'courseInstances': !exists(json, 'courseInstances') ? undefined : (json['courseInstances'] === null ? null : (json['courseInstances'] as Array<any>).map(CourseInstanceFromJSON)),
        'students': !exists(json, 'students') ? undefined : (json['students'] === null ? null : (json['students'] as Array<any>).map(UserFromJSON)),
    };
}

export function CourseToJSON(value?: Course | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'createdAt': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'updatedAt': value.updatedAt === undefined ? undefined : (value.updatedAt.toISOString()),
        'startTime': value.startTime,
        'duration': value.duration,
        'location': value.location,
        'subject': SubjectToJSON(value.subject),
        'subjectId': value.subjectId,
        'courseInstances': value.courseInstances === undefined ? undefined : (value.courseInstances === null ? null : (value.courseInstances as Array<any>).map(CourseInstanceToJSON)),
        'students': value.students === undefined ? undefined : (value.students === null ? null : (value.students as Array<any>).map(UserToJSON)),
    };
}

