/* tslint:disable */
/* eslint-disable */
/**
 * MobyLab Web App
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CourseInstanceUser } from './CourseInstanceUser';
import {
    CourseInstanceUserFromJSON,
    CourseInstanceUserFromJSONTyped,
    CourseInstanceUserToJSON,
} from './CourseInstanceUser';
import type { CourseUser } from './CourseUser';
import {
    CourseUserFromJSON,
    CourseUserFromJSONTyped,
    CourseUserToJSON,
} from './CourseUser';
import type { LaboratoryInstanceUser } from './LaboratoryInstanceUser';
import {
    LaboratoryInstanceUserFromJSON,
    LaboratoryInstanceUserFromJSONTyped,
    LaboratoryInstanceUserToJSON,
} from './LaboratoryInstanceUser';
import type { LaboratoryUser } from './LaboratoryUser';
import {
    LaboratoryUserFromJSON,
    LaboratoryUserFromJSONTyped,
    LaboratoryUserToJSON,
} from './LaboratoryUser';
import type { SubjectUser } from './SubjectUser';
import {
    SubjectUserFromJSON,
    SubjectUserFromJSONTyped,
    SubjectUserToJSON,
} from './SubjectUser';
import type { UserFile } from './UserFile';
import {
    UserFileFromJSON,
    UserFileFromJSONTyped,
    UserFileToJSON,
} from './UserFile';
import type { UserRoleEnum } from './UserRoleEnum';
import {
    UserRoleEnumFromJSON,
    UserRoleEnumFromJSONTyped,
    UserRoleEnumToJSON,
} from './UserRoleEnum';

/**
 * 
 * @export
 * @interface User
 */
export interface User {
    /**
     * 
     * @type {string}
     * @memberof User
     */
    id?: string;
    /**
     * 
     * @type {Date}
     * @memberof User
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof User
     */
    updatedAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    name?: string | null;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    email?: string | null;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    password?: string | null;
    /**
     * 
     * @type {UserRoleEnum}
     * @memberof User
     */
    role?: UserRoleEnum;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    group?: string | null;
    /**
     * 
     * @type {Array<UserFile>}
     * @memberof User
     */
    userFiles?: Array<UserFile> | null;
    /**
     * 
     * @type {Array<CourseUser>}
     * @memberof User
     */
    courseUsers?: Array<CourseUser> | null;
    /**
     * 
     * @type {Array<LaboratoryUser>}
     * @memberof User
     */
    laboratoryUsers?: Array<LaboratoryUser> | null;
    /**
     * 
     * @type {Array<SubjectUser>}
     * @memberof User
     */
    subjectUsers?: Array<SubjectUser> | null;
    /**
     * 
     * @type {Array<LaboratoryInstanceUser>}
     * @memberof User
     */
    laboratoryInstanceUsers?: Array<LaboratoryInstanceUser> | null;
    /**
     * 
     * @type {Array<CourseInstanceUser>}
     * @memberof User
     */
    courseInstanceUsers?: Array<CourseInstanceUser> | null;
}

/**
 * Check if a given object implements the User interface.
 */
export function instanceOfUser(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function UserFromJSON(json: any): User {
    return UserFromJSONTyped(json, false);
}

export function UserFromJSONTyped(json: any, ignoreDiscriminator: boolean): User {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'createdAt': !exists(json, 'createdAt') ? undefined : (new Date(json['createdAt'])),
        'updatedAt': !exists(json, 'updatedAt') ? undefined : (new Date(json['updatedAt'])),
        'name': !exists(json, 'name') ? undefined : json['name'],
        'email': !exists(json, 'email') ? undefined : json['email'],
        'password': !exists(json, 'password') ? undefined : json['password'],
        'role': !exists(json, 'role') ? undefined : UserRoleEnumFromJSON(json['role']),
        'group': !exists(json, 'group') ? undefined : json['group'],
        'userFiles': !exists(json, 'userFiles') ? undefined : (json['userFiles'] === null ? null : (json['userFiles'] as Array<any>).map(UserFileFromJSON)),
        'courseUsers': !exists(json, 'courseUsers') ? undefined : (json['courseUsers'] === null ? null : (json['courseUsers'] as Array<any>).map(CourseUserFromJSON)),
        'laboratoryUsers': !exists(json, 'laboratoryUsers') ? undefined : (json['laboratoryUsers'] === null ? null : (json['laboratoryUsers'] as Array<any>).map(LaboratoryUserFromJSON)),
        'subjectUsers': !exists(json, 'subjectUsers') ? undefined : (json['subjectUsers'] === null ? null : (json['subjectUsers'] as Array<any>).map(SubjectUserFromJSON)),
        'laboratoryInstanceUsers': !exists(json, 'laboratoryInstanceUsers') ? undefined : (json['laboratoryInstanceUsers'] === null ? null : (json['laboratoryInstanceUsers'] as Array<any>).map(LaboratoryInstanceUserFromJSON)),
        'courseInstanceUsers': !exists(json, 'courseInstanceUsers') ? undefined : (json['courseInstanceUsers'] === null ? null : (json['courseInstanceUsers'] as Array<any>).map(CourseInstanceUserFromJSON)),
    };
}

export function UserToJSON(value?: User | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'createdAt': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'updatedAt': value.updatedAt === undefined ? undefined : (value.updatedAt.toISOString()),
        'name': value.name,
        'email': value.email,
        'password': value.password,
        'role': UserRoleEnumToJSON(value.role),
        'group': value.group,
        'userFiles': value.userFiles === undefined ? undefined : (value.userFiles === null ? null : (value.userFiles as Array<any>).map(UserFileToJSON)),
        'courseUsers': value.courseUsers === undefined ? undefined : (value.courseUsers === null ? null : (value.courseUsers as Array<any>).map(CourseUserToJSON)),
        'laboratoryUsers': value.laboratoryUsers === undefined ? undefined : (value.laboratoryUsers === null ? null : (value.laboratoryUsers as Array<any>).map(LaboratoryUserToJSON)),
        'subjectUsers': value.subjectUsers === undefined ? undefined : (value.subjectUsers === null ? null : (value.subjectUsers as Array<any>).map(SubjectUserToJSON)),
        'laboratoryInstanceUsers': value.laboratoryInstanceUsers === undefined ? undefined : (value.laboratoryInstanceUsers === null ? null : (value.laboratoryInstanceUsers as Array<any>).map(LaboratoryInstanceUserToJSON)),
        'courseInstanceUsers': value.courseInstanceUsers === undefined ? undefined : (value.courseInstanceUsers === null ? null : (value.courseInstanceUsers as Array<any>).map(CourseInstanceUserToJSON)),
    };
}

