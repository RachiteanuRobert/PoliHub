/* tslint:disable */
/* eslint-disable */
/**
 * MobyLab Web App
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { SubjectSimpleDTO } from './SubjectSimpleDTO';
import {
    SubjectSimpleDTOFromJSON,
    SubjectSimpleDTOFromJSONTyped,
    SubjectSimpleDTOToJSON,
} from './SubjectSimpleDTO';

/**
 * 
 * @export
 * @interface JoinUserSimpleSubjectDTO
 */
export interface JoinUserSimpleSubjectDTO {
    /**
     * 
     * @type {string}
     * @memberof JoinUserSimpleSubjectDTO
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof JoinUserSimpleSubjectDTO
     */
    subjectId?: string;
    /**
     * 
     * @type {SubjectSimpleDTO}
     * @memberof JoinUserSimpleSubjectDTO
     */
    subject?: SubjectSimpleDTO;
}

/**
 * Check if a given object implements the JoinUserSimpleSubjectDTO interface.
 */
export function instanceOfJoinUserSimpleSubjectDTO(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function JoinUserSimpleSubjectDTOFromJSON(json: any): JoinUserSimpleSubjectDTO {
    return JoinUserSimpleSubjectDTOFromJSONTyped(json, false);
}

export function JoinUserSimpleSubjectDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): JoinUserSimpleSubjectDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'subjectId': !exists(json, 'subjectId') ? undefined : json['subjectId'],
        'subject': !exists(json, 'subject') ? undefined : SubjectSimpleDTOFromJSON(json['subject']),
    };
}

export function JoinUserSimpleSubjectDTOToJSON(value?: JoinUserSimpleSubjectDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'subjectId': value.subjectId,
        'subject': SubjectSimpleDTOToJSON(value.subject),
    };
}

