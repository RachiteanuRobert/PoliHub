/* tslint:disable */
/* eslint-disable */
/**
 * MobyLab Web App
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CourseInstance } from './CourseInstance';
import {
    CourseInstanceFromJSON,
    CourseInstanceFromJSONTyped,
    CourseInstanceToJSON,
} from './CourseInstance';
import type { CourseSimpleDTO } from './CourseSimpleDTO';
import {
    CourseSimpleDTOFromJSON,
    CourseSimpleDTOFromJSONTyped,
    CourseSimpleDTOToJSON,
} from './CourseSimpleDTO';
import type { LaboratoryInstance } from './LaboratoryInstance';
import {
    LaboratoryInstanceFromJSON,
    LaboratoryInstanceFromJSONTyped,
    LaboratoryInstanceToJSON,
} from './LaboratoryInstance';
import type { LaboratorySimpleDTO } from './LaboratorySimpleDTO';
import {
    LaboratorySimpleDTOFromJSON,
    LaboratorySimpleDTOFromJSONTyped,
    LaboratorySimpleDTOToJSON,
} from './LaboratorySimpleDTO';
import type { UserRoleEnum } from './UserRoleEnum';
import {
    UserRoleEnumFromJSON,
    UserRoleEnumFromJSONTyped,
    UserRoleEnumToJSON,
} from './UserRoleEnum';

/**
 * 
 * @export
 * @interface UserDTO
 */
export interface UserDTO {
    /**
     * 
     * @type {string}
     * @memberof UserDTO
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof UserDTO
     */
    name?: string | null;
    /**
     * 
     * @type {string}
     * @memberof UserDTO
     */
    email?: string | null;
    /**
     * 
     * @type {UserRoleEnum}
     * @memberof UserDTO
     */
    role?: UserRoleEnum;
    /**
     * 
     * @type {string}
     * @memberof UserDTO
     */
    group?: string | null;
    /**
     * 
     * @type {Array<CourseSimpleDTO>}
     * @memberof UserDTO
     */
    courses?: Array<CourseSimpleDTO> | null;
    /**
     * 
     * @type {Array<LaboratorySimpleDTO>}
     * @memberof UserDTO
     */
    laboratories?: Array<LaboratorySimpleDTO> | null;
    /**
     * 
     * @type {Array<LaboratoryInstance>}
     * @memberof UserDTO
     */
    laboratoryInstances?: Array<LaboratoryInstance> | null;
    /**
     * 
     * @type {Array<CourseInstance>}
     * @memberof UserDTO
     */
    courseInstances?: Array<CourseInstance> | null;
}

/**
 * Check if a given object implements the UserDTO interface.
 */
export function instanceOfUserDTO(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function UserDTOFromJSON(json: any): UserDTO {
    return UserDTOFromJSONTyped(json, false);
}

export function UserDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'email': !exists(json, 'email') ? undefined : json['email'],
        'role': !exists(json, 'role') ? undefined : UserRoleEnumFromJSON(json['role']),
        'group': !exists(json, 'group') ? undefined : json['group'],
        'courses': !exists(json, 'courses') ? undefined : (json['courses'] === null ? null : (json['courses'] as Array<any>).map(CourseSimpleDTOFromJSON)),
        'laboratories': !exists(json, 'laboratories') ? undefined : (json['laboratories'] === null ? null : (json['laboratories'] as Array<any>).map(LaboratorySimpleDTOFromJSON)),
        'laboratoryInstances': !exists(json, 'laboratoryInstances') ? undefined : (json['laboratoryInstances'] === null ? null : (json['laboratoryInstances'] as Array<any>).map(LaboratoryInstanceFromJSON)),
        'courseInstances': !exists(json, 'courseInstances') ? undefined : (json['courseInstances'] === null ? null : (json['courseInstances'] as Array<any>).map(CourseInstanceFromJSON)),
    };
}

export function UserDTOToJSON(value?: UserDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'email': value.email,
        'role': UserRoleEnumToJSON(value.role),
        'group': value.group,
        'courses': value.courses === undefined ? undefined : (value.courses === null ? null : (value.courses as Array<any>).map(CourseSimpleDTOToJSON)),
        'laboratories': value.laboratories === undefined ? undefined : (value.laboratories === null ? null : (value.laboratories as Array<any>).map(LaboratorySimpleDTOToJSON)),
        'laboratoryInstances': value.laboratoryInstances === undefined ? undefined : (value.laboratoryInstances === null ? null : (value.laboratoryInstances as Array<any>).map(LaboratoryInstanceToJSON)),
        'courseInstances': value.courseInstances === undefined ? undefined : (value.courseInstances === null ? null : (value.courseInstances as Array<any>).map(CourseInstanceToJSON)),
    };
}

