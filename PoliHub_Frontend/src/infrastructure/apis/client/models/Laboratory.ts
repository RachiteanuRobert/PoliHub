/* tslint:disable */
/* eslint-disable */
/**
 * MobyLab Web App
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Course } from './Course';
import {
    CourseFromJSON,
    CourseFromJSONTyped,
    CourseToJSON,
} from './Course';
import type { LaboratoryInstance } from './LaboratoryInstance';
import {
    LaboratoryInstanceFromJSON,
    LaboratoryInstanceFromJSONTyped,
    LaboratoryInstanceToJSON,
} from './LaboratoryInstance';
import type { User } from './User';
import {
    UserFromJSON,
    UserFromJSONTyped,
    UserToJSON,
} from './User';

/**
 * 
 * @export
 * @interface Laboratory
 */
export interface Laboratory {
    /**
     * 
     * @type {string}
     * @memberof Laboratory
     */
    id?: string;
    /**
     * 
     * @type {Date}
     * @memberof Laboratory
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof Laboratory
     */
    updatedAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof Laboratory
     */
    assistantName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Laboratory
     */
    startTime?: string | null;
    /**
     * 
     * @type {number}
     * @memberof Laboratory
     */
    duration?: number;
    /**
     * 
     * @type {string}
     * @memberof Laboratory
     */
    location?: string | null;
    /**
     * 
     * @type {number}
     * @memberof Laboratory
     */
    dayOfWeek?: number;
    /**
     * 
     * @type {Course}
     * @memberof Laboratory
     */
    course?: Course;
    /**
     * 
     * @type {string}
     * @memberof Laboratory
     */
    courseId?: string;
    /**
     * 
     * @type {Array<LaboratoryInstance>}
     * @memberof Laboratory
     */
    laboratoryInstances?: Array<LaboratoryInstance> | null;
    /**
     * 
     * @type {Array<User>}
     * @memberof Laboratory
     */
    students?: Array<User> | null;
}

/**
 * Check if a given object implements the Laboratory interface.
 */
export function instanceOfLaboratory(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function LaboratoryFromJSON(json: any): Laboratory {
    return LaboratoryFromJSONTyped(json, false);
}

export function LaboratoryFromJSONTyped(json: any, ignoreDiscriminator: boolean): Laboratory {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'createdAt': !exists(json, 'createdAt') ? undefined : (new Date(json['createdAt'])),
        'updatedAt': !exists(json, 'updatedAt') ? undefined : (new Date(json['updatedAt'])),
        'assistantName': !exists(json, 'assistantName') ? undefined : json['assistantName'],
        'startTime': !exists(json, 'startTime') ? undefined : json['startTime'],
        'duration': !exists(json, 'duration') ? undefined : json['duration'],
        'location': !exists(json, 'location') ? undefined : json['location'],
        'dayOfWeek': !exists(json, 'dayOfWeek') ? undefined : json['dayOfWeek'],
        'course': !exists(json, 'course') ? undefined : CourseFromJSON(json['course']),
        'courseId': !exists(json, 'courseId') ? undefined : json['courseId'],
        'laboratoryInstances': !exists(json, 'laboratoryInstances') ? undefined : (json['laboratoryInstances'] === null ? null : (json['laboratoryInstances'] as Array<any>).map(LaboratoryInstanceFromJSON)),
        'students': !exists(json, 'students') ? undefined : (json['students'] === null ? null : (json['students'] as Array<any>).map(UserFromJSON)),
    };
}

export function LaboratoryToJSON(value?: Laboratory | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'createdAt': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'updatedAt': value.updatedAt === undefined ? undefined : (value.updatedAt.toISOString()),
        'assistantName': value.assistantName,
        'startTime': value.startTime,
        'duration': value.duration,
        'location': value.location,
        'dayOfWeek': value.dayOfWeek,
        'course': CourseToJSON(value.course),
        'courseId': value.courseId,
        'laboratoryInstances': value.laboratoryInstances === undefined ? undefined : (value.laboratoryInstances === null ? null : (value.laboratoryInstances as Array<any>).map(LaboratoryInstanceToJSON)),
        'students': value.students === undefined ? undefined : (value.students === null ? null : (value.students as Array<any>).map(UserToJSON)),
    };
}

